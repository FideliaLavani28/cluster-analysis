# -*- coding: utf-8 -*-
"""UAS_BIGDATA_generate_dataset.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1K3yaRa_olfZqsnDaoFSxrOtCpVfPzGLi
"""

from numpy.random import uniform, normal, randint, rand
import numpy as np
import pandas as pd

def generate_dataset(seed):
    np.random.seed(seed)
    
    x = np.array([])
    y = np.array([])
    loop = randint(10,15)

    for i in range(loop):
        x = np.append(x, np.random.normal(randint(10), rand(), 20))
        y = np.append(y, np.random.normal(randint(10), rand(), 20))
        
    df = pd.DataFrame(data = {'x': x, 'y':y})
    df.to_csv('dataset.csv', index=False)

student_id = 2401954905 #change this to your student id

generate_dataset(student_id)

table=pd.read_csv('dataset.csv')
table.head()

from sklearn.cluster import KMeans
from sklearn.preprocessing import MinMaxScaler
from matplotlib import pyplot as pplt

pplt.scatter(table['x'],table['y'])
pplt.xlabel('x')
pplt.ylabel('y')

k = KMeans(n_clusters=2)
y_predicted = k.fit_predict(table[['x','y']])
y_predicted

table['cluster']=y_predicted
table.head()

table0 = table[table.cluster==0]
table1 = table[table.cluster==1]
pplt.scatter(table0.x,table0.y, color = 'blue')
pplt.scatter(table1.x,table1.y, color = 'green')
pplt.xlabel('x')
pplt.ylabel('y')
pplt.legend()

scale = MinMaxScaler()

scale.fit(table[['x']])
table[['x']]=scale.transform(table[['x']])

scale.fit(table[['y']])
table[['y']]=scale.transform(table[['y']])

table.head()

pplt.scatter(table['x'],table['y'])

k = KMeans(n_clusters=2)
y_predicted = k.fit_predict(table[['x','y']])
y_predicted

table['cluster']=y_predicted
table.head()

table0 = table[table.cluster==0]
table1 = table[table.cluster==1]
pplt.scatter(table0.x,table0.y, color = 'blue')
pplt.scatter(table1.x,table1.y, color = 'green')
pplt.xlabel('x')
pplt.ylabel('y')
pplt.legend()